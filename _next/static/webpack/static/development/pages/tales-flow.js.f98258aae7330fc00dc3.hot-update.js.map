{"version":3,"file":"static/webpack/static\\development\\pages\\tales-flow.js.f98258aae7330fc00dc3.hot-update.js","sources":["webpack:///./components/layout/sidebar/Sidebar.js"],"sourcesContent":["import React from 'react'\r\nimport Link from 'next/link'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport { connect } from 'react-redux'\r\nimport {UI_SIDEBAR_CLOSE} from '../../../redux/actionTypes'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\n// import AccountTreeIcon from '@material-ui/icons/AccountTree';\r\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  listItem: {\r\n    borderBottom: \"1px solid \" + theme.palette.primary.main\r\n  },\r\n  icoInList: {\r\n    minWidth: 40\r\n  },\r\n  ico: {\r\n    fontSize: 30\r\n  }\r\n}))\r\n\r\nconst navs = [\r\n    {\r\n        name: \"Home\",\r\n        url: \"/\",\r\n        icon: HomeIcon\r\n    },\r\n    {\r\n        name: \"Create Tale\",\r\n        url: \"/create-tale\",\r\n        icon: AddBoxIcon\r\n    },\r\n    // {\r\n    //     name: \"Tales Flow\",\r\n    //     url: \"/tales-flow\",\r\n    //     icon: AccountTreeIcon\r\n    // },\r\n    {\r\n        name: \"My Tales\",\r\n        url: \"/my-tales\",\r\n        icon: BusinessCenterIcon\r\n    }\r\n]\r\n\r\nconst Sidebard = props => {\r\n  const classes = useStyles()\r\n\r\n  const sideList = side => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={props.closeSidebar}\r\n      onKeyDown={props.closeSidebar}\r\n    >\r\n      <List>\r\n        {navs.map((nav, index) => (\r\n          <Link key={nav.name} href={nav.url} as={nav.url} >\r\n            <ListItem button className={classes.listItem}>\r\n              <ListItemIcon className={classes.icoInList}>\r\n                  <nav.icon color=\"primary\" className={classes.ico} />\r\n              </ListItemIcon>\r\n              <ListItemText primary={nav.name} />\r\n            </ListItem>\r\n          </Link>\r\n        ))}\r\n      </List>\r\n      {/* <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List> */}\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <Drawer open={props.isSidebarOpen} onClose={props.closeSidebar}>\r\n        {sideList('left')}\r\n      </Drawer>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isSidebarOpen: state.ui.isSidebarOpen\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeSidebar: () => dispatch({type: UI_SIDEBAR_CLOSE})\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebard)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAbA;AAAA;AAkBA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAMA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AARA;AACA;AA8BA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}